{"version":3,"sources":["../Server/server.js"],"names":["install","app","db","use","static","json","get","req","res","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","status","message","send","params","user","post","newIssue","body","created","Date","validateIssue","insertOne","Issue","cleanupIssue","result","_id","insertedId","limit","next","connect","client","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;;;AAQA,2BAAiBA,OAAjB;AACA,MAAMC,MAAM,wBAAZ;AACA,IAAIC,EAAJ;;AAEA;;;;;;;;;;;;;;AAcA;;;AAGAD,IAAIE,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,eAAf,CAAR;AACAH,IAAIE,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEAJ,IAAIK,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpCN,IAAGO,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GACEC,IADF,CACOC,UAAU;AACf,QAAMC,WAAW,EAAEC,aAAcF,OAAOG,MAAvB,EAAjB;AACAR,MAAIH,IAAJ,CAAS,EAACY,WAAYH,QAAb,EAAuBI,SAAUL,MAAjC,EAAT;AAEC,EALH,EAMEM,KANF,CAMQC,SAAS;AACfC,UAAQC,GAAR,CAAYF,KAAZ;AACAZ,MAAIe,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqB,EAAEmB,SAAW,2BAA0BJ,KAAM,EAA7C,EAArB;AACA,EATF;AAUA,CAXD;;AAaAnB,IAAIK,GAAJ,CAAQ,WAAR,EAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC;AACAA,KAAIiB,IAAJ,CAAU,SAAQlB,IAAImB,MAAJ,CAAWC,IAAK,KAAlC;AACA,CAHD;;AAKA1B,IAAI2B,IAAJ,CAAS,aAAT,EAAwB,CAACrB,GAAD,EAAMC,GAAN,KAAc;AACrC,OAAMqB,WAAWtB,IAAIuB,IAArB;AACA,KAAI,CAACD,SAASN,MAAd,EACCM,SAASN,MAAT,GAAkB,KAAlB;;AAEDM,UAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AACA,OAAMZ,QAAQ,gBAAea,aAAf,CAA6BJ,QAA7B,CAAd;AACA,KAAIT,KAAJ,EAAU;AACTZ,MAAIe,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqB,EAAEmB,SAAW,qBAAoBJ,KAAM,EAAvC,EAArB;AACA;AACA;;AAEDlB,IAAGO,UAAH,CAAc,QAAd,EAAwByB,SAAxB,CAAkCC,MAAMC,YAAN,CAAmBP,QAAnB,CAAlC,EACEjB,IADF,CACQyB,UACNnC,GAAGO,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,EAAE4B,KAAMD,OAAOE,UAAf,EAA7B,EAA0DC,KAA1D,CAAgE,CAAhE,EAAmEC,IAAnE,EAFF,EAGG7B,IAHH,CAGQiB,YAAY;AAClBrB,MAAIH,IAAJ,CAASwB,QAAT;AACA,EALF,EAKIV,KALJ,CAKUC,SAAS;AACjBC,UAAQC,GAAR,CAAYF,KAAZ;AACAZ,MAAIe,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqB,EAAEmB,SAAW,0BAAyBJ,KAAM,EAA5C,EAArB;AACA,EARF;AASA;;AAGA,CAxBD;;AA0BA,qBAAYsB,OAAZ,CAAoB,4BAApB,EACI9B,IADJ,CACS+B,UAAU;AACdzC,MAAKyC,OAAOzC,EAAP,CAAU,cAAV,CAAL;AACAD,KAAI2C,MAAJ,CAAW,GAAX,EAAgB,YAAW;AAC3BvB,UAAQC,GAAR,CAAY,4BAAZ;AACA,EAFA;AAGD,CANJ,EAOIH,KAPJ,CAOUC,SAAS;AACfC,SAAQC,GAAR,CAAa,WAAUF,KAAM,EAA7B;AACA,CATJ;;AAWA","file":"server.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport issueValidator from './issue.js';\r\nimport SourceMapSupport from 'source-map-support';\r\nimport { MongoClient } from 'mongodb';\r\nimport 'babel-polyfill';\r\n\r\n/*\r\nconst issueValidator = require('./issue.js');\r\nconst bodyParser = require('body-parser');\r\nconst express = require('express');\r\n\r\nconst MongoClient = require('mongodb').MongoClient;\r\n*/\r\n\r\nSourceMapSupport.install();\r\nconst app = express();\r\nlet db;\r\n\r\n/* const issues = [\r\n\t{\r\n\t\tid: 1, status: 'Open', owner: 'Ravan',\r\n\t\tcreated: new Date('2016-08-15'), effort: 5, completionDate: undefined,\r\n\t\ttitle: 'Error in console when 1 clicking Add',\r\n\t},\r\n\t{\r\n\t\tid: 2, status: 'Assigned', owner: 'Eddie',\r\n\t\tcreated: new Date('2016-08-16'), effort: 14,\r\n\t\tcompletionDate: new Date('2016-08-30'),\r\n\t\ttitle: 'Missing bottom border on panel',\r\n\t}\r\n]; */ \r\n\r\n//app.use('/public', express.static('MyStaticPages'));\r\n\r\n\r\napp.use(express.static('MyStaticPages'));\r\napp.use(bodyParser.json());\r\n\r\napp.get('/api/issues', (req, res) => {\r\n\tdb.collection('issues').find().toArray()\r\n\t\t.then(issues => {\r\n\t\t\tconst metadata = { total_count : issues.length };\t\r\n\t\t\tres.json({_metadata : metadata, records : issues});\r\n\r\n\t\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\tres.status(500).json({ message : `Internal Server Error : ${error}`});\r\n\t\t});\r\n});\r\n\r\napp.get('/hi/:user', (req, res) => {\r\n\t//res.send({content : `Hello ${req.params.user} !!`});\r\n\tres.send(`Hello ${req.params.user} !!`);\r\n});\r\n\r\napp.post('/api/issues', (req, res) => {\r\n\tconst newIssue = req.body;\r\n\tif (!newIssue.status)\r\n\t\tnewIssue.status = 'New';\r\n\t\r\n\tnewIssue.created = new Date();\r\n\tconst error = issueValidator.validateIssue(newIssue);\r\n\tif (error){\r\n\t\tres.status(422).json({ message : `Invalid request : ${error}`});\r\n\t\treturn;\r\n\t}\r\n\r\n\tdb.collection('issues').insertOne(Issue.cleanupIssue(newIssue))\r\n\t\t.then( result =>\r\n\t\t\tdb.collection('issues').find({ _id : result.insertedId }).limit(1).next()\r\n\t\t).then(newIssue => {\r\n\t\t\tres.json(newIssue);\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\tres.status(500).json({ message : `Internal serve error : ${error}` });\r\n\t\t});\r\n\t/*issues.push(newIssue);\r\n\tres.json(newIssue);\t*/\r\n\t\r\n});\r\n\r\nMongoClient.connect('mongodb://localhost:27017/')\r\n\t\t\t.then(client => {\r\n\t\t\t\t db = client.db('IssueTracker');\r\n\t\t\t\t app.listen(300, function() {\r\n\t\t\t\t\tconsole.log('Server Started on port 300');\r\n\t\t\t\t});\t\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(`ERROR : ${error}`);\r\n\t\t\t});\r\n\r\n/*\r\nMongoClient.connect('mongodb://localhost:27017/', (err, client) => {\r\n\tlet db = client.db('IssueTracker');\r\n\tdb.collection('issues').find().toArray((err, docs) => {\r\n\t\tconsole.log('Result of find : ');\r\n\t\tconsole.dir(docs);\r\n\t\tclient.close();\r\n\t});\r\n});*/"]}