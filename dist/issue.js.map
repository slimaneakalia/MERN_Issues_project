{"version":3,"sources":["../Server/issue.js"],"names":["REQUIRED","OPTIONAL","validIssueStatus","New","Open","Assigned","Fixed","Verified","Closed","issueFieldType","status","owner","effort","created","completionDate","title","cleanupIssue","issue","cleanedUpIssue","Object","keys","forEach","field","validateIssue","errors","push","length","join"],"mappings":";;;;;AAAA,MAAMA,WAAW,UAAjB;AACA,MAAMC,WAAW,UAAjB;;AAEA,MAAMC,mBAAmB;AACxBC,MAAM,IADkB;AAExBC,OAAO,IAFiB;AAGxBC,WAAW,IAHa;AAIxBC,QAAQ,IAJgB;AAKxBC,WAAW,IALa;AAMxBC,SAAS;AANe,CAAzB;;AASA,MAAMC,iBAAiB;AACtBC,SAASV,QADa;AAEtBW,QAAQX,QAFc;AAGtBY,SAASX,QAHa;AAItBY,UAAUb,QAJY;AAKtBc,iBAAiBb,QALK;AAMtBc,QAAQf;AANc,CAAvB;;AASA,SAASgB,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B,OAAMC,iBAAiB,EAAvB;AACAC,QAAOC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2BC,SAAS;AACnC,MAAIb,eAAea,KAAf,CAAJ,EAA2BJ,eAAeI,KAAf,IAAwBL,MAAMK,KAAN,CAAxB;AAC3B,EAFD;AAGA,QAAOJ,cAAP;AACA;;AAED,SAASK,aAAT,CAAuBN,KAAvB,EACA;AACC,OAAMO,SAAS,EAAf;AACAL,QAAOC,IAAP,CAAYX,cAAZ,EAA4BY,OAA5B,CAAoCC,SAAS;AAC5C,MAAIb,eAAea,KAAf,MAA0BtB,QAA1B,IAAsC,CAACiB,MAAMK,KAAN,CAA3C,EAAwD;AACvDE,UAAOC,IAAP,CAAa,6BAA4BH,KAAM,EAA/C;AACA;AACD,EAJD;;AAMA,KAAI,CAACpB,iBAAiBe,MAAMP,MAAvB,CAAL,EAAoC;AACnCc,SAAOC,IAAP,CAAa,GAAER,MAAMP,MAAO,yBAA5B;AACA;;AAED,QAAQc,OAAOE,MAAP,GAAgBF,OAAOG,IAAP,CAAY,GAAZ,CAAhB,GAAmC,IAA3C;AACA;;kBAEc;AACdJ,cADc;AAEdP;AAFc,C","file":"issue.js","sourcesContent":["const REQUIRED = 'required';\r\nconst OPTIONAL = 'optional';\r\n\r\nconst validIssueStatus = {\r\n\tNew : true,\r\n\tOpen : true,\r\n\tAssigned : true,\r\n\tFixed : true,\r\n\tVerified : true,\r\n\tClosed : true,\r\n};\r\n\r\nconst issueFieldType = {\r\n\tstatus : REQUIRED,\r\n\towner : REQUIRED,\r\n\teffort : OPTIONAL,\r\n\tcreated : REQUIRED,\r\n\tcompletionDate : OPTIONAL,\r\n\ttitle : REQUIRED,\r\n};\r\n\r\nfunction cleanupIssue(issue){\r\n\tconst cleanedUpIssue = {};\r\n\tObject.keys(issue).forEach(field => {\r\n\t\tif (issueFieldType[field]) cleanedUpIssue[field] = issue[field];\r\n\t});\r\n\treturn cleanedUpIssue;\r\n}\r\n\r\nfunction validateIssue(issue)\r\n{\r\n\tconst errors = [];\r\n\tObject.keys(issueFieldType).forEach(field => {\r\n\t\tif (issueFieldType[field] === REQUIRED && !issue[field]){\r\n\t\t\terrors.push(`Missing mandatory field : ${field}`);\r\n\t\t}\r\n\t});\r\n\r\n\tif (!validIssueStatus[issue.status]){\r\n\t\terrors.push(`${issue.status} is not a valid status.`);\r\n\t}\r\n\r\n\treturn (errors.length ? errors.join(';') : null);\r\n}\r\n\r\nexport default {\r\n\tvalidateIssue,\r\n\tcleanupIssue,\r\n};"]}